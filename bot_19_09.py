#imports
import vk_api
from vk_api import bot_longpoll
import random
import pymysql
#offsets
global connect 
global vk 
global users 
global boolean
global pid
global countrees
token = input('–¢–æ–∫–µ–Ω: ')
connect = vk_api.VkApi(token=token)
vk = connect.get_api()
users = {}
boolean = False
countrees = ['', 'üá∏üá¶ –°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è', 'üá¶üá´ –ê—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω', 'üáßüá© –ë–∞–Ω–≥–ª–∞–¥–µ—à', 'üáßüáπ –ë—É—Ç–∞–Ω', 'üáÆüá≥ –ò–Ω–¥–∏—è', 'üá≥üáµ –ù–µ–ø–∞–ª', 'üáµüá∞ –ü–∞–∫–∏—Å—Ç–∞–Ω', 'üá±üá∞ –®—Ä–∏-–õ–∞–Ω–∫–∞' ]
    
def send(text, uid):
    vk.messages.send(random_id = random.randint(0, 100), message = text, peer_id = uid)
    
def save(users):
    f1le = open('users.txt', 'w')
    users = str(users)
    f1le.write(users)
    f1le.close()

def ware(first, secund, pid, users):
    try:
        secund = secund[3 : 12]
        cfirst = users[first]
        csecund = users[int(secund)]
        text = countrees[cfirst] + ' vs ' + countrees[csecund]
        send(text, pid)
        resule = random.randint(1, 2)
        if resule == 1:
            text = countrees[cfirst] + ' –ø–æ–±–µ–¥–∏–ª!'
            users.pop(int(secund))
            send(text, pid)
        if resule ==2:
            text = countrees[csecund]+ ' –ø–æ–±–µ–¥–∏–ª!'
            users.pop(first)
            send(text, pid)
        return(users)


    except:
        send('–¥–∞–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –∏–≥—Ä–µ –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç —Å—Ç—Ä–∞–Ω—ã!', pid)
        return(users)
        

def load():
    try:
        f1le = open('users.txt', 'r')
        userssrt = f1le.read()
        users = eval(userssrt)
        return(users)
    except:
        return({})

def logic(text, users, uid):
    boolean = False
    rtext = '' 
    rezerved = list(users.values())
    if text == '!–ù–∞—á–∞—Ç—å' or text == '!–Ω–∞—á–∞—Ç—å':
        if users[uid] == 'st0':
            rtext = '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É\n1.'+countrees[1]+'\n2.'+countrees[2]+'\n3.'+countrees[3]+'\n4.'+countrees[4]+'\n5.'+countrees[5]+'\n6.'+countrees[6]+'\n7.'+countrees[7]+'\n8.'+countrees[8]
            users[uid]='st1' 
        else:
            rtext = '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å—Ç–∞—Ä–∞–Ω–∞!'
    elif users[uid] == 'st1':
        if text == '1' and bool(1 in rezerved) == False or text == '–°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è' and  bool(1 in rezerved) == False :
            users[uid] = 1
            rtext = '–í—ã–±—Ä–∞–Ω–∞ '+countrees[1]
        elif text == '3' and bool(3 in rezerved) == False or text == '–ë–∞–Ω–≥–ª–∞–¥–µ—à' and bool(3 in rezerved) == False:
            users[uid] = 3
            rtext = '–í—ã–±—Ä–∞–Ω '+countrees[3]
        elif text == '2' and bool(2 in rezerved) == False or text == 'A—Ñ–≥–∞–Ω–∏—Å—Ç–∞–Ω' and bool(2 in rezerved) == False:
            users[uid] = 2
            rtext = '–í—ã–±—Ä–∞–Ω '+countrees[2]
        elif text == '4' and bool(4 in rezerved) == False or text == '–ë—É—Ç–∞–Ω' and bool(4 in rezerved) == False:
            users[uid] = 4
            rtext = '–í—ã–±—Ä–∞–Ω ' + countrees[4]
        elif text == '5' and bool(5 in rezerved) == False or text == '–ò–Ω–¥–∏—è' and bool(5 in rezerved) == False:
            users[uid] = 5
            rtext = '–í—ã–±—Ä–∞–Ω–∞ ' + countrees[5]
        elif text == '6' and bool(6 in rezerved) == False or text == '–ù–µ–ø–∞–ª' and bool(6 in rezerved) == False:
            users[uid] = 6
            rtext = '–í—ã–±—Ä–∞–Ω ' + countrees[6]
        elif text == '7' and bool(7 in rezerved) == False or text == '–ü–∞–∫–∏—Å—Ç–∞–Ω' and bool(7 in rezerved) == False:
            users[uid] = 7
            rtext = '–í—ã–±—Ä–∞–Ω ' + countrees[7]
        elif text == '8' and bool(8 in rezerved) == False or text == '–®—Ä–∏-–õ–∞–Ω–∫–∞' and bool(8 in rezerved) == False:
            users[uid] = 8
            rtext = '–í—ã–±—Ä–∞–Ω–∞ ' + countrees[8]
        else:
            rtext = '–°—Ç—Ä–∞–Ω–∞ –∑–∞–Ω—è—Ç–∞'
    if text == '!–í–æ–π–Ω–∞' or text == '!–≤–æ–π–Ω–∞' and users[uid] != 'st1' and users[uid] != 'st0':
        rtext = '–ö–æ–º—É –í—ã –∂–µ–ª–∞–µ—Ç–µ –æ–±—ä—è–≤–∏—Ç—å –≤–æ–π–Ω—É?'
        boolean = True
    if text == '!–ö–æ–º–∞–Ω–¥—ã' or text == '!–∫–æ–º–∞–Ω–¥—ã':
        rtext = '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n !–ù–∞—á–∞—Ç—å\n !–í–æ–π–Ω–∞\n !–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞(–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)\n'
    if text[0] == '!' and rtext == '':
        rtext = '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞!'
    return(rtext, users, boolean)

def sysemauth(uid):
    try:
        users[uid]
    except:
        users[uid] = 'st0'
    return users

#—Ä–∞–±–æ—Ç–∞ –ª–æ–Ω–≥–ø–æ–ª
def main():
    boolean = False
    gid = input('Id –≥—Ä—É–ø–ø—ã')
    longpo11 = bot_longpoll.VkBotLongPoll(vk=connect, group_id=gid, wait = 1)
    for event in longpo11.listen():
        print('___EVENT___')
        if event.raw['type'] == 'message_new':
            text = event.obj.text
            pid = event.obj.peer_id
            uid = event.obj.from_id
            users = sysemauth(uid)
            if boolean == True:
                users = ware(uid, text, pid, users)
            text, users, boolean = logic(text, users, uid )
            if text != '':
                send(text, pid)

users = load()          
try:
    main()
except:
    save(users)
    exit()
